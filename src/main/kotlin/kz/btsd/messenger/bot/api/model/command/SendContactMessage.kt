package kz.btsd.messenger.bot.api.model.command

import io.swagger.annotations.ApiModel
import io.swagger.annotations.ApiModelProperty
import kz.btsd.messenger.bot.api.model.media.InputContact
import kz.btsd.messenger.bot.api.model.peer.Peer
import kz.btsd.messenger.bot.api.validation.LocalId
import javax.validation.Valid

@ApiModel(description = "Send message with contact attachment", parent = Command::class)
data class SendContactMessage(
    @ApiModelProperty(notes = "Peer to send this message to")
    @get:Valid
    val recipient: Peer,
    @ApiModelProperty(
        notes = "Message ID generated by Bot. Can be any string. Bot will receive MessageIdAssigned update with localId - messageId match",
        example = "804d1bbd-901f-470a-b1b8-1859277a7803"
    )
    @get:LocalId
    val localId: String? = null,
    @ApiModelProperty(notes = "Input contact media")
    val inputMedia: InputContact
) : Command("SendContactMessage")
